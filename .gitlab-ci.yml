variables:
    IMAGE_NAME: registry.gitlab.com/testowe7261437/python_cellular_automata_website
    IMAGE_TAG: python-cellular-automata-app
    DOCKER_TLS_CERTDIR: "/certs" 

stages:
    - test
    - build
    - deploy
    - cleanup

run_tests:
    stage: test
    image: python:3.12-slim
    script:
        - echo "RUNNING TESTs (not really)"

build_image:
    stage: build
    image: docker:27.3
    services:
        - docker:27.3-dind
    before_script:
        - echo "Logging in to GitLab Container Registry"
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    script:
        - docker image prune -a
        - docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
        - docker push ${IMAGE_NAME}:${IMAGE_TAG}
    only:
      changes:
        - Dockerfile
        - requirements.txt
        - app.py
        - static/*
        - templates/*
        - .gitlab-ci.yml

deploy:
    stage: deploy
    interruptible: true
    image: docker:latest
    services:
        - docker:dind
    before_script:
        - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    script:
        # Pull the latest image built
        - docker pull ${CI_REGISTRY_IMAGE}:${IMAGE_TAG}

        # Stop and remove the old container if it exists
        #- docker ps -q --filter "name=python-app" | xargs -r docker stop
        #- docker ps -a -q --filter "name=python-app" | xargs -r docker rmscript:
        - docker ps -q --filter "name=python-app" | ForEach-Object { docker stop $_ }
        - docker ps -q --filter "name=python-app" | ForEach-Object { docker rm $_ }


        # Run the new image on port 4000
        - docker run -d --name python-app --restart=always -p 4000:80 ${CI_REGISTRY_IMAGE}:${IMAGE_TAG}
    only:
        - main

# Optional Cleanup Stage: Clean up old Docker images
cleanup:
  stage: cleanup
  image: docker:latest
  services:
    - docker:dind
  script:
    # Remove dangling images
    - docker image prune -f
  when: always